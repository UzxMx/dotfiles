#!/usr/bin/env zsh
#
# This script will be evaluated after `rcup` finishes.

# We can think that when ~/.zcompdump doesn't exist, it indicates that it's the first time to run
# `rcup`, so we need to source ~/.zshrc manually in order to make things right (like configuring
# PATH variable etc.).
if [ ! -e ~/.zcompdump ]; then
  . ~/.zshrc
  # After sourcing ~/.zshrc, ~/.zcompdump will be generated, so we need to remove it on exit.
  zshexit() { rm ~/.zcompdump }
  trap exit INT
fi

. $(dirname "$0")/../scripts/lib/utils.sh

# Fix bad permissions.
chmod 600 ~/.ssh/config

if is_mac; then
  platform=osx
  [[ ! -e ~/bin/vscode ]] && ln -s "/Applications/Visual Studio Code.app/Contents/MacOS/Electron" ~/bin/vscode
elif is_wsl; then
  platform=wsl
  [[ ! -e ~/bin/vagrant ]] && which vagrant.exe &>/dev/null \
    && echo "#!/usr/bin/env bash\nvagrant.exe \"\$@\"" >~/bin/vagrant \
    && chmod a+x ~/bin/vagrant
fi

if [ -n "$platform" -a -f ~/.zshrc.$platform ]; then
  if [ -f ~/.zshrc.platform ]; then
    if [ $? != 0 -o "$(readlink ~/.zshrc.platform)" != "$(ls -d ~)/.zshrc.$platform" ]; then
      warn "Failed to link ~/.zshrc.platform to ~/.zshrc.$platform, please check ~/.zshrc.platform"
    fi
  else
    ln -s ~/.zshrc.$platform ~/.zshrc.platform
  fi
fi

type -p erb &>/dev/null && erb -T - $(dirname $0)/../vim/vimrc.generated.erb >~/.vim/vimrc.generated
type -p erb &>/dev/null && erb -T - $(dirname $0)/../config/nvim/coc-settings.json.erb >~/.config/nvim/coc-settings.json

install_antibody() {
  curl -sfL git.io/antibody | sudo sh -s - -b /usr/local/bin
  ~/.dotfiles/bin/antibody_bundle
}
check_and_install_executable 'antibody' 'install_antibody' || exit $?

if type -p npm &>/dev/null; then
  # vim-autoformat depends on js-beautify.
  install_js_beautify() {
    npm install -g js-beautify
  }
  check_and_install_executable 'js-beautify' 'install_js_beautify' || exit $?
fi

executables=(
  bc
  jq
  "netcat|nc"
  socat
  fzf
  bat
  fd
  hstr
  rlwrap
  rg
)
check_and_install_executables $executables || exit $?
