#!/usr/bin/env ruby

require 'thor'

# Refs:
#   https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/
#   https://mirrors.tuna.tsinghua.edu.cn/help/homebrew-bottles/
class Main < Thor
  desc 'use_mirror', 'Use mirror'
  option :formular, type: :boolean, default: true, desc: 'Use mirror for formular'
  option :bottle, type: :boolean, default: false, desc: 'Use mirror for bottle'
  option :reset, type: :boolean, default: false, desc: 'Reset mirror'
  def use_mirror
    ensure_brew

    if options[:formular]
      if options[:reset]
        remote_url = 'https://github.com/Homebrew/brew.git'
        core_remote_url = 'https://github.com/Homebrew/homebrew-core.git'
      else
        remote_url = 'https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git'
        core_remote_url = 'https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git'
      end

      system <<-EOF
        bash -c '
          repo="$(brew --repo)"
          if [ -z $repo ]; then
            exit 1
          fi
          cd $repo
          git remote set-url origin #{remote_url}

          cd "$repo/Library/Taps/homebrew/homebrew-core"
          git remote set-url origin #{core_remote_url}
        '
      EOF
    end

    if options[:bottle]
      if options[:reset]
        puts <<-EOF
Please execute below scripts to reset mirror for bottle:

unset HOMEBREW_BOTTLE_DOMAIN

        EOF
      else
        puts <<-EOF
Please execute below scripts to use mirror for bottle:

export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles

        EOF
      end
    end
  end

  private

  def fatal(msg)
    STDERR.puts "Error: #{msg}"
    exit 1
  end

  def ensure_brew
    `sh -c "type brew"`
    fatal 'Cannot find brew' unless $?.exitstatus.zero?
  end
end

Main.start(ARGV)
