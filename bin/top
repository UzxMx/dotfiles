#!/usr/bin/env bash

set -e

dotfiles_dir="$(realpath "$(dirname "$BASH_SOURCE")/..")"

usage() {
  cat <<-EOF 1>&2
Wrapper for top utility.

Subcommands:
  s, sort - sort by some field
EOF
  exit 1
}

source "$dotfiles_dir/scripts/lib/path.sh"
PATH="$(new_path_exclude "$dotfiles_dir/bin")"

alias_cmd() {
  local new_name="$1"
  local old_name="$2"
  eval "
    usage_$new_name() {
      usage_$old_name \"\$@\"
    }
    cmd_$new_name() {
      cmd_$old_name \"\$@\"
    }
  "
}

usage_sort() {
  cat <<-EOF 1>&2
Usage: top sort [-m | -c]

Sort by some field.

Options:
  -m sort by memory
  -c sort by cpu
  -d, --dry-run dry run
EOF
  exit 1
}

cmd_sort() {
  local prefix
  local sort_field
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -m)
        sort_field="+%MEM"
        ;;
      -c)
        sort_field="+%CPU"
        ;;
      -d | --dry-run)
        prefix="echo"
        ;;
      *)
        usage_sort
        ;;
    esac
    shift
  done
  [ -z "$sort_field" ] && usage_sort
  $prefix top -o "$sort_field" -c
}
alias_cmd s sort

run() {
  local cmd="$1"
  shift
  case "$1" in
    -h)
      type "usage_$cmd" &>/dev/null && "usage_$cmd"
      ;;
  esac
  "cmd_$cmd" "$@"
}

run_fallback() {
  if [ "$#" -eq 0 ]; then
    top -o +%MEM -c
  else
    top "$@"
  fi
}

case "$1" in
  s | sort)
    run "$@"
    ;;
  -h)
    usage
    ;;
  -)
    shift
    run_fallback "$@"
    ;;
  *)
    run_fallback "$@"
    ;;
esac
