#!/usr/bin/env bash

set -e

usage() {
  cat <<-EOF 1>&2
OSX open likewise.

When running on OSX, it's just a wrapper.

When running on WSL, we uses cmd.exe to implement the same behavior.
The parameter can be a filesystem path. Also it can be an HTTP URL
which is inferred by 'https?://' prefix.

Usage:

$0 [-b <http url>]
$0 <path>

[-b] Use browser to open the specified url (only available on WSL)
[-h] Show help
EOF
  exit 1
}

if [[ "$(uname -r)" =~ Microsoft$ ]]; then
  has_http_prefix() {
    [[ "$1" =~ ^https?:// ]]
  }

  open_browser() {
    url="$1"
    if ! has_http_prefix "$url"; then
      url="http://$url"
    fi
    cmd.exe /c start "$url"
  }

  while getopts "b:h" opt; do
    case "$opt" in
      b)
        open_browser "$OPTARG"
        exit
        ;;
      *)
        usage
        ;;
    esac
  done

  source ~/.dotfiles/scripts/lib/utils.sh

  target="${1:-.}"
  if has_http_prefix "$target"; then
    open_browser "$target"
    exit
  fi
  if [ ! -e "$target" ]; then
    abort "Directory or file '$target' doesn't exist."
  fi

  cmd.exe /c "start explorer.exe $(wslpath -w "$target")"
else
  source ~/.dotfiles/scripts/lib/path.sh
  PATH=$(new_path_exclude ~/.dotfiles/bin)
  open "$@"
fi
