#!/usr/bin/env bash
#
# Switch to a branch, or checkout a new branch from a selected branch.

set -e

usage() {
  cat <<-EOF
Wrapper for git branch utility.

Options:
  -l show local branches
  -r show remote branches
  -a, --all show all branches
  -v, -vv show remote tracking branches
EOF
  exit 1
}

branch_opts=()
while [ "$#" -gt 0 ]; do
  case "$1" in
    -l | -r | -vv | -a | --all)
      branch_opts+=("$1")
      ;;
    -v)
      branch_opts+=("-vv")
      ;;
    -*)
      usage
      ;;
  esac
  shift
done

if [ "${#branch_opts}" -eq 0 ]; then
  branch_opts=(-a)
fi

. $(dirname "$BASH_SOURCE")/git-common

select_branch --result --prompt '(CTRL-E:NewBranch CTRL-Y:yank CTRL-D:delete)> ' \
  --expect "ctrl-e,ctrl-d" \
  --bind "ctrl-y:execute-silent(echo -n {} | sed 's/^* //' | awk '{print \$1}' | trim | cb)+abort" \
  "${branch_opts[@]}"

key="${result[0]}"
selection="${result[1]}"
if [ "$key" = "ctrl-e" ]; then
  branch="$(parse_branch "$selection")"
  new_branch="$(rlwrap -S "From $branch, create new branch: " -o cat)"
  git checkout -b "$new_branch" "$branch"
elif [ "$key" = "ctrl-d" ]; then
  branch="$(parse_branch "$selection")"
  . $(dirname "$BASH_SOURCE")/../lib/prompt.sh
  reply=$(yesno "Are you sure you want to delete this branch: $branch? (y/N)" "no")
  [ "$reply" != "yes" ] && echo 'Cancelled' && exit
  git branch -D "$branch"
elif [ -n "$selection" ]; then
  git checkout "$(remove_remotes "$(parse_branch "$selection")")"
else
  exit 1
fi
